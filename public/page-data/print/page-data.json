{"componentChunkName":"component---gatsby-theme-mdx-deck-src-templates-deck-js","path":"/print","webpackCompilationHash":"21523de058c73f03c956","result":{"data":{"deck":{"id":"345ee1a8-453c-5c8d-9fc8-a0d58594de85","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = vsDark;\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Notes = makeShortcode(\"Notes\");\nvar Steps = makeShortcode(\"Steps\");\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"ReactJS Crash Course\"), mdx(\"p\", null, \"Quick start guide to ReactJS and building frontend applications\"), mdx(\"hr\", null), mdx(\"h1\", null, \"Prerequisites\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reacttraining.com/blog/javascript-the-react-parts/\"\n  }), \"JavaScript Primer\"), \" to get caught up on modern JavaScript\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://learnxinyminutes.com/docs/html/\"\n  }), \"Learn HTML in X Minutes\"), \" understand basic HTML syntax\"), mdx(\"hr\", null), mdx(\"h1\", null, \"Components\"), mdx(\"p\", null, \"Everything in React is a Component\"), mdx(\"img\", {\n    width: \"500px\",\n    height: \"500px\",\n    src: everything_is_a_component\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"DELETE THIS\"), mdx(\"p\", null, \"Example of inline React\"), mdx(Counter, {\n    mdxType: \"Counter\"\n  }), mdx(\"hr\", null), mdx(Hello, {\n    mdxType: \"Hello\"\n  }), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"class Hello extends React.Component {\\n  render() {\\n    return <h1>Hello world!</h1>;\\n  }\\n}\\n\"))), mdx(\"hr\", null), mdx(FunctionalHello, {\n    mdxType: \"FunctionalHello\"\n  }), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"file=./components/part1/FunctionalHello.js\",\n    \"file\": \"./components/part1/FunctionalHello.js\"\n  }), \"import React from 'react';\\n\\nconst FunctionalHello = () => {\\n  return <h1>Hello functional world!</h1>;\\n}\\n\\nexport default FunctionalHello\\n\"))), mdx(\"hr\", null), mdx(ComposedApp, {\n    mdxType: \"ComposedApp\"\n  }), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"file=./components/part1/ComposedApp.js\",\n    \"file\": \"./components/part1/ComposedApp.js\"\n  }), \"import React from 'react';\\n\\nexport default class ComposedApp extends React.Component {\\n  render() {\\n    return (\\n      <div>\\n        <Greeting />\\n      </div>\\n    );\\n  }\\n}\\n \\nclass Greeting extends React.Component {\\n  render() {\\n    // want to pass greeting as a props\\n    const greeting = 'Composing React Components';\\n    return <h1>{greeting}</h1>;\\n  }\\n}\\n\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"Handling Data\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"props: external, not controlled by the component itself, passed from parents\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"state: private, and controllable from the component itself\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Passing Data with Props\"), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"subtitle=\\\"Before\\\"\",\n    \"subtitle\": \"\\\"Before\\\"\"\n  }), \"class App extends React.Component {\\n  render() {\\n    return (\\n      <div>\\n        <Greeting />\\n      </div>\\n    );\\n  }\\n}\\n\\nclass Greeting extends React.Component {\\n  render() {\\n    const greeting = 'Welcome to React';\\n    return <h1>{greeting}</h1>;\\n  }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"subtitle=\\\"Want to pass props from App to Greeting\\\" 5,14\",\n    \"subtitle\": \"\\\"Want\",\n    \"to\": true,\n    \"pass\": true,\n    \"props\": true,\n    \"from\": true,\n    \"App\": true,\n    \"Greeting\\\"\": true,\n    \"5,14\": true\n  }), \"class App extends React.Component {\\n  render() {\\n    return (\\n      <div>\\n        <Greeting />\\n      </div>\\n    );\\n  }\\n}\\n\\nclass Greeting extends React.Component {\\n  render() {\\n    const greeting = 'Welcome to React';\\n    return <h1>{greeting}</h1>;\\n  }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"subtitle=\\\"After\\\"\",\n    \"subtitle\": \"\\\"After\\\"\"\n  }), \"class App extends React.Component {\\n  render() {\\n    const greeting = 'Welcome to React';\\n    return (\\n      <div>\\n        <Greeting greeting={greeting} />\\n      </div>\\n    );\\n  }\\n}\\n \\nclass Greeting extends React.Component {\\n  render() {\\n    return <h1>{this.props.greeting}</h1>\\n  }\\n}\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"Passing props for functionl components\\\"\",\n    \"title\": \"\\\"Passing\",\n    \"props\": true,\n    \"for\": true,\n    \"functionl\": true,\n    \"components\\\"\": true\n  }), \"class App extends Component {\\n  render() {\\n    const greeting = 'Welcome to React';\\n \\n    return (\\n      <div>\\n        <Greeting greeting={greeting} />\\n      </div>\\n    );\\n  }\\n}\\n \\nconst Greeting = props => <h1>{props.greeting}</h1>;\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"13\": true,\n    \"className\": \"language-jsx\",\n    \"metastring\": \"subtitle=\\\"Props are received in the function signature as props\\\" 13\",\n    \"subtitle\": \"\\\"Props\",\n    \"are\": true,\n    \"received\": true,\n    \"in\": true,\n    \"the\": true,\n    \"function\": true,\n    \"signature\": true,\n    \"as\": true,\n    \"props\\\"\": true\n  }), \"class App extends Component {\\n  render() {\\n    const greeting = 'Welcome to React';\\n \\n    return (\\n      <div>\\n        <Greeting greeting={greeting} />\\n      </div>\\n    );\\n  }\\n}\\n \\nconst Greeting = props => <h1>{props.greeting}</h1>;\\n\"))), mdx(Notes, {\n    mdxType: \"Notes\"\n  }, \"Source: https://www.robinwieruch.de/react-pass-props-to-component\"), mdx(\"hr\", null), mdx(Content, {\n    mdxType: \"Content\"\n  }, mdx(\"h2\", null, \"Props are read only and do not make components interactive. Need state for that\"), mdx(StatefulApp, {\n    mdxType: \"StatefulApp\"\n  })), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"class StatefulApp extends React.Component {\\n  constructor(props) {\\n    super(props);\\n \\n    this.state = {\\n      isShow: true,\\n    };\\n  }\\n  render() {\\n    const greeting = 'Now you see me';\\n    return (\\n      <div>\\n        {this.state.isShow ? <Greeting greeting={greeting} /> : null}\\n \\n        <button onClick={\\n          () => this.setState(state => ({ isShow: !state.isShow }))\\n        } type=\\\"button\\\">\\n          Toggle Show\\n        </button>\\n      </div>\\n    );\\n  }\\n}\\n \\nconst Greeting = ({ greeting }) => <h1>{greeting}</h1>;\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"subtitle=\\\"Set up state\\\" 5:7\",\n    \"subtitle\": \"\\\"Set\",\n    \"up\": true,\n    \"state\\\"\": true,\n    \"5:7\": true\n  }), \"class StatefulApp extends React.Component {\\n  constructor(props) {\\n    super(props);\\n \\n    this.state = {\\n      isShow: true,\\n    };\\n  }\\n  render() {\\n    const greeting = 'Now you see me';\\n    return (\\n      <div>\\n        {this.state.isShow ? <Greeting greeting={greeting} /> : null}\\n \\n        <button onClick={\\n          () => this.setState(state => ({ isShow: !state.isShow }))\\n        } type=\\\"button\\\">\\n          Toggle Show\\n        </button>\\n      </div>\\n    );\\n  }\\n}\\n \\nconst Greeting = ({ greeting }) => <h1>{greeting}</h1>;\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"subtitle=\\\"Update state onClick\\\" 15:17\",\n    \"subtitle\": \"\\\"Update\",\n    \"state\": true,\n    \"onClick\\\"\": true,\n    \"15:17\": true\n  }), \"class StatefulApp extends React.Component {\\n  constructor(props) {\\n    super(props);\\n \\n    this.state = {\\n      isShow: true,\\n    };\\n  }\\n  render() {\\n    const greeting = 'Now you see me';\\n    return (\\n      <div>\\n        {this.state.isShow ? <Greeting greeting={greeting} /> : null}\\n \\n        <button onClick={\\n          () => this.setState(state => ({ isShow: !state.isShow }))\\n        } type=\\\"button\\\">\\n          Toggle Show\\n        </button>\\n      </div>\\n    );\\n  }\\n}\\n \\nconst Greeting = ({ greeting }) => <h1>{greeting}</h1>;\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"13\": true,\n    \"className\": \"language-jsx\",\n    \"metastring\": \"subtitle=\\\"Conditional rendering\\\" 13\",\n    \"subtitle\": \"\\\"Conditional\",\n    \"rendering\\\"\": true\n  }), \"class StatefulApp extends React.Component {\\n  constructor(props) {\\n    super(props);\\n \\n    this.state = {\\n      isShow: true,\\n    };\\n  }\\n  render() {\\n    const greeting = 'Now you see me';\\n    return (\\n      <div>\\n        {this.state.isShow ? <Greeting greeting={greeting} /> : null}\\n \\n        <button onClick={\\n          () => this.setState(state => ({ isShow: !state.isShow }))\\n        } type=\\\"button\\\">\\n          Toggle Show\\n        </button>\\n      </div>\\n    );\\n  }\\n}\\n \\nconst Greeting = ({ greeting }) => <h1>{greeting}</h1>;\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"Can you pass state as props to children\\\" 19,29,30\",\n    \"title\": \"\\\"Can\",\n    \"you\": true,\n    \"pass\": true,\n    \"state\": true,\n    \"as\": true,\n    \"props\": true,\n    \"to\": true,\n    \"children\\\"\": true,\n    \"19,29,30\": true\n  }), \"class StatefulApp extends React.Component {\\n  constructor(props) {\\n    super(props);\\n \\n    this.state = {\\n      isShow: true,\\n    };\\n  }\\n \\n  toggleShow = () => {\\n    this.setState(state => ({ isShow: !state.isShow }));\\n  };\\n \\n  render() {\\n    const greeting = 'Now you see me';\\n \\n    return (\\n      <div>\\n        <Greeting greeting={greeting} isShow={this.state.isShow} />\\n \\n        <button onClick={\\n          () => this.setState(state => ({ isShow: !state.isShow }))\\n        } type=\\\"button\\\">\\n          Toggle Show\\n        </button>\\n      </div>\\n    );\\n  }\\n}\\n \\nconst Greeting = ({ greeting, isShow }) =>\\n  isShow ? <h1>{greeting}</h1> : null;\\n\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"How to pass props from child to parent?\"), mdx(Steps, {\n    mdxType: \"Steps\"\n  }, \"NO  \\uD83D\\uDE2D , there is no way to pass props from a child to a parent component\", mdx(\"p\", null, \"Lets try to add a Button component for toggling\")), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"class StatefulApp extends React.Component {\\n  constructor(props) {\\n    super(props);\\n \\n    this.state = {\\n      isShow: true,\\n    };\\n  }\\n  render() {\\n    const greeting = 'Now you see me';\\n    return (\\n      <div>\\n        {this.state.isShow ? <Greeting greeting={greeting} /> : null}\\n \\n        <button onClick={\\n          () => this.setState(state => ({ isShow: !state.isShow }))\\n        } type=\\\"button\\\">\\n          Toggle Show\\n        </button>\\n      </div>\\n    );\\n  }\\n}\\n \\nconst Greeting = ({ greeting }) => <h1>{greeting}</h1>;\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"Try to Add Button Component\\\"\",\n    \"title\": \"\\\"Try\",\n    \"to\": true,\n    \"Add\": true,\n    \"Button\": true,\n    \"Component\\\"\": true\n  }), \"class StatefulApp extends React.Component {\\n  constructor(props) {\\n  render() {\\n    const greeting = 'Now you see me';\\n    return (\\n      <div>\\n        {isShow ? <Greeting greeting={greeting} /> : null}\\n        <Button />\\n      </div>\\n    );\\n  }\\n}\\n\\nclass Button extends Component {\\n  constructor(props) {\\n    super(props);\\n \\n    this.state = {\\n      isShow: true,\\n    };\\n  }\\n \\n  toggleShow = () => {\\n    this.setState(state => ({ isShow: !state.isShow }));\\n  };\\n \\n  render() {\\n    return (\\n      <button onClick={this.toggleShow} type=\\\"button\\\">\\n        Toggle Show\\n      </button>\\n    );\\n  }\\n}\\n \\nconst Greeting = ({ greeting }) => <h1>{greeting}</h1>;\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"subtitle=\\\"❌ Button cannot pass isShow as props to App ❌\\\"  6[10:15],7[10:15]\",\n    \"subtitle\": \"\\\"❌\",\n    \"Button\": true,\n    \"cannot\": true,\n    \"pass\": true,\n    \"isShow\": true,\n    \"as\": true,\n    \"props\": true,\n    \"to\": true,\n    \"App\": true,\n    \"❌\\\"\": true,\n    \"\": true,\n    \"6[10:15],7[10:15]\": true\n  }), \"class StatefulApp extends React.Component {\\n  render() {\\n    const greeting = 'Now you see me';\\n    return (\\n      <div>\\n        {isShow ? <Greeting greeting={greeting} /> : null}\\n        <Button />\\n      </div>\\n    );\\n  }\\n}\\n\\nclass Button extends Component {\\n  constructor(props) {\\n    super(props);\\n \\n    this.state = {\\n      isShow: true,\\n    };\\n  }\\n \\n  toggleShow = () => {\\n    this.setState(state => ({ isShow: !state.isShow }));\\n  };\\n \\n  render() {\\n    return (\\n      <button onClick={this.toggleShow} type=\\\"button\\\">\\n        Toggle Show\\n      </button>\\n    );\\n  }\\n}\\n \\nconst Greeting = ({ greeting }) => <h1>{greeting}</h1>;\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"Only solution is to lift the state up\\\"\",\n    \"title\": \"\\\"Only\",\n    \"solution\": true,\n    \"is\": true,\n    \"to\": true,\n    \"lift\": true,\n    \"the\": true,\n    \"state\": true,\n    \"up\\\"\": true\n  }), \"class StatefulApp extends React.Component {\\n  constructor(props) {\\n    super(props);\\n \\n    this.state = {\\n      isShow: true,\\n    };\\n  }\\n \\n  toggleShow = () => {\\n    this.setState(state => ({ isShow: !state.isShow }));\\n  };\\n  render() {\\n    const greeting = 'Now you see me';\\n    return (\\n      <div>\\n        {this.state.isShow ? <Greeting greeting={greeting} /> : null}\\n        <Button onClick={this.toggleShow} />\\n      </div>\\n    );\\n  }\\n}\\n\\nclass Button extends Component {\\n  constructor(props) {\\n    super(props);\\n \\n    this.state = {\\n      isShow: true,\\n    };\\n  }\\n \\n  toggleShow = () => {\\n    this.setState(state => ({ isShow: !state.isShow }));\\n  };\\n \\n  render() {\\n    return (\\n      <button onClick={this.toggleShow} type=\\\"button\\\">\\n        Toggle Show\\n      </button>\\n    );\\n  }\\n}\\n \\nconst Greeting = ({ greeting }) => <h1>{greeting}</h1>;\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"subtitle=\\\"App component passes down a function in the props to the Button \\\"\",\n    \"subtitle\": \"\\\"App\",\n    \"component\": true,\n    \"passes\": true,\n    \"down\": true,\n    \"a\": true,\n    \"function\": true,\n    \"in\": true,\n    \"the\": true,\n    \"props\": true,\n    \"to\": true,\n    \"Button\": true,\n    \"\\\"\": true\n  }), \"class StatefulApp extends React.Component {\\n  constructor(props) {\\n    super(props);\\n \\n    this.state = {\\n      isShow: true,\\n    };\\n  }\\n \\n  toggleShow = () => {\\n    this.setState(state => ({ isShow: !state.isShow }));\\n  };\\n  render() {\\n    const greeting = 'Now you see me';\\n    return (\\n      <div>\\n        {this.state.isShow ? <Greeting greeting={greeting} /> : null}\\n        <Button onClick={this.toggleShow} />\\n      </div>\\n    );\\n  }\\n}\\n\\nconst Button = ({ onClick }) => (\\n  <button onClick={onClick} type=\\\"button\\\">\\n    Toggle Show\\n  </button>\\n);\\n\\nconst Greeting = ({ greeting }) => <h1>{greeting}</h1>;\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"Composing React Components with children prop\\\"\",\n    \"title\": \"\\\"Composing\",\n    \"React\": true,\n    \"Components\": true,\n    \"with\": true,\n    \"children\": true,\n    \"prop\\\"\": true\n  }), \"class StatefulApp extends React.Component {\\n  ...\\n  render() {\\n    const greeting = 'Now you see me';\\n    return (\\n      <div>\\n        {this.state.isShow ? <Greeting greeting={greeting} /> : null}\\n        <Button onClick={this.toggleShow} />\\n      </div>\\n    );\\n  }\\n}\\n\\nconst Button = ({ onClick }) => (\\n  <button onClick={onClick} type=\\\"button\\\">\\n    Toggle Show\\n  </button>\\n);\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"subtitle=\\\"You can put anything between the closing tags\\\"\",\n    \"subtitle\": \"\\\"You\",\n    \"can\": true,\n    \"put\": true,\n    \"anything\": true,\n    \"between\": true,\n    \"the\": true,\n    \"closing\": true,\n    \"tags\\\"\": true\n  }), \"class StatefulApp extends React.Component {\\n  ...\\n  render() {\\n    const greeting = 'Now you see me';\\n    return (\\n      <div>\\n        {this.state.isShow ? <Greeting greeting={greeting} /> : null}\\n        <Button onClick={this.toggleShow}>Toggle Show</Button>\\n      </div>\\n    );\\n  }\\n}\\n \\nconst Button = ({ onClick, children }) => (\\n  <button onClick={onClick} type=\\\"button\\\">\\n    {children}\\n  </button>\\n);\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"Passing Components as Props\\\"\",\n    \"title\": \"\\\"Passing\",\n    \"Components\": true,\n    \"as\": true,\n    \"Props\\\"\": true\n  }), \"const User = ({ user }) => (\\n  <Profile user={user}>\\n    <AvatarRound user={user} />\\n  </Profile>\\n);\\n \\nconst Profile = ({ user, children }) => (\\n  <div className=\\\"profile\\\">\\n    <div>{children}</div>\\n    <div>\\n      <p>{user.name}</p>\\n    </div>\\n  </div>\\n);\\n \\nconst AvatarRound = ({ user }) => (\\n  <img className=\\\"round\\\" alt=\\\"avatar\\\" src={user.avatarUrl} />\\n);\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"subtitle=\\\"Use regular props if passing more than one component\\\"\",\n    \"subtitle\": \"\\\"Use\",\n    \"regular\": true,\n    \"props\": true,\n    \"if\": true,\n    \"passing\": true,\n    \"more\": true,\n    \"than\": true,\n    \"one\": true,\n    \"component\\\"\": true\n  }), \"const User = ({ user }) => (\\n  <Profile\\n    user={user}\\n    avatar={<AvatarRound user={user} />}\\n    biography={<BiographyFat user={user} />}\\n  />\\n);\\n \\nconst Profile = ({ user, avatar, biography }) => (\\n  <div className=\\\"profile\\\">\\n    <div>{avatar}</div>\\n    <div>\\n      <p>{user.name}</p>\\n      {biography}\\n    </div>\\n  </div>\\n);\\n \\nconst AvatarRound = ({ user }) => (\\n  <img className=\\\"round\\\" alt=\\\"avatar\\\" src={user.avatarUrl} />\\n);\\n \\nconst BiographyFat = ({ user }) => (\\n  <p className=\\\"fat\\\">{user.biography}</p>\\n);\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"Slot Pattern\\\"\",\n    \"title\": \"\\\"Slot\",\n    \"Pattern\\\"\": true\n  }), \"const User = ({ user }) => (\\n  <Profile\\n    user={user}\\n    avatar={<AvatarRound user={user} />}\\n    biography={<BiographyFat user={user} />}\\n  />\\n);\\n \\nconst Profile = ({ user, avatar, biography }) => (\\n  <div className=\\\"profile\\\">\\n    <div>{avatar}</div>\\n    <div>\\n      <p>{user.name}</p>\\n      {biography}\\n    </div>\\n  </div>\\n);\\n \\nconst AvatarRound = ({ user }) => (\\n  <img className=\\\"round\\\" alt=\\\"avatar\\\" src={user.avatarUrl} />\\n);\\n \\nconst BiographyFat = ({ user }) => (\\n  <p className=\\\"fat\\\">{user.biography}</p>\\n);\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"subtitle=\\\"Can exchange components dynamically\\\"\",\n    \"subtitle\": \"\\\"Can\",\n    \"exchange\": true,\n    \"components\": true,\n    \"dynamically\\\"\": true\n  }), \"const User = ({ user }) => (\\n  <Profile\\n    user={user}\\n    avatar={<AvatarSquare user={user} />}\\n    biography={<BiographyItalic user={user} />}\\n  />\\n);\\n \\nconst Profile = ({ user, avatar, biography }) => (\\n  <div className=\\\"profile\\\">\\n    <div>{avatar}</div>\\n    <div>\\n      <p>{user.name}</p>\\n      {biography}\\n    </div>\\n  </div>\\n);\\n \\nconst AvatarSquare = ({ user }) => (\\n  <img className=\\\"square\\\" alt=\\\"avatar\\\" src={user.avatarUrl} />\\n);\\n \\nconst BiographyItalic = ({ user }) => (\\n  <p className=\\\"italic\\\">{user.biography}</p>\\n);\\n\\nconst AvatarRound = ({ user }) => (\\n  <img className=\\\"round\\\" alt=\\\"avatar\\\" src={user.avatarUrl} />\\n);\\n \\nconst BiographyFat = ({ user }) => (\\n  <p className=\\\"fat\\\">{user.biography}</p>\\n);\\n\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"Prop Drilling\"), mdx(\"img\", {\n    width: \"1200px\",\n    height: \"1200px\",\n    src: prop_drilling\n  }), mdx(Notes, {\n    mdxType: \"Notes\"\n  }, \"Image source: https://medium.com/@nguyencaophung/react-from-prop-drilling-to-use-hook-to-pass-data-in-app-3e3caad6a65f\"), mdx(\"hr\", null), mdx(\"h1\", null, \"Use Context to Share Data\"), mdx(\"p\", null, \"Read more \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://medium.com/@nguyencaophung/react-from-prop-drilling-to-use-hook-to-pass-data-in-app-3e3caad6a65f\"\n  }), \"here\")), mdx(\"img\", {\n    width: \"1200px\",\n    height: \"1200px\",\n    src: context_to_share_data\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"Part 2: Putting it together\"), mdx(\"h2\", null, \"Let's try to to build a simple Q&A webapp that relies on a backend API\"), mdx(\"a\", {\n    href: \"https://ancient-castle-17079.herokuapp.com/\",\n    target: \"_blank\"\n  }, \"Working Demo\"), mdx(\"p\", null, \"(Based on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://auth0.com/blog/react-tutorial-building-and-securing-your-first-app/#What-You-Will-Build-with-React\"\n  }), \"React Tutorial: Building and Securing Your First App\"), \")\"), mdx(\"hr\", null), mdx(\"h1\", null, \"Achievement Level: Vostok (almost)\"), mdx(\"img\", {\n    width: \"400px\",\n    height: \"400px\",\n    src: vorstock\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Web application with a database backend.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any type of application.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A small set of core (CRUD) features.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A good set of core features and a small set of extensions.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"del\", {\n    parentName: \"li\"\n  }, \"Basic testing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"del\", {\n    parentName: \"li\"\n  }, \"Basic documentation\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"Full Stack Developement\"), mdx(\"img\", {\n    width: \"1000px\",\n    height: \"1000px\",\n    src: full_stack\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"Backend APIs\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"GET /\"), \" - retrieve all questions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"GET /:id\"), \" - get a specific question \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"POST /\"), \" - insert a new question \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"POST /answer/:id\"), \" - insert a new answer to the question \")), mdx(\"hr\", null), mdx(\"h1\", null, mdx(\"inlineCode\", {\n    parentName: \"h1\"\n  }, \"GET /\"), \" - retrieve all questions\"), mdx(\"p\", null, \"Run in terminal:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"curl https://limitless-sands-43875.herokuapp.com\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"[{\\n  'id': 1,\\n  'title': 'How do I make a sandwich?',\\n  'description': 'Grab food is too expensive and I no $$',\\n  'answers': 1,\\n}]\\n\")), mdx(\"hr\", null), mdx(\"h1\", null, mdx(\"inlineCode\", {\n    parentName: \"h1\"\n  }, \"GET /:id\"), \" - get a specific question\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"curl https://limitless-sands-43875.herokuapp.com/1\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"{\\n  'id': 1,\\n  'title': 'How do I make a sandwich?',\\n  'description': 'Grab food is too expensive and I no $$',\\n  'answers': 1,\\n}\\n\")), mdx(\"hr\", null), mdx(\"h1\", null, mdx(\"inlineCode\", {\n    parentName: \"h1\"\n  }, \"POST /\"), \" - insert a new question\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"curl -X POST -H 'Content-Type: application/json' -d '{\\n  \\\"title\\\": \\\"How do I make a sandwich?\\\",\\n  \\\"description\\\": \\\"Grab food is too expensive and I no $$\\\"\\n}' https://limitless-sands-43875.herokuapp.com/\\n\")), mdx(\"hr\", null), mdx(\"h1\", null, mdx(\"inlineCode\", {\n    parentName: \"h1\"\n  }, \"POST /answer/:id\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"curl -X POST -H 'Content-Type: application/json' -d '{\\n  \\\"answer\\\": \\\"Have you tried googling it?\\\"\\n}' https://limitless-sands-43875.herokuapp.com/answer/1\\n\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Set up your React Application\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"npx create-react-app frontend\\n# move into the new directory\\ncd frontend\\n# start your react app\\nnpm start\\n\")), mdx(\"hr\", null), mdx(\"p\", null, \"Go to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"localhost:3000\"), \" on your web browser\"), mdx(\"img\", {\n    width: \"750px\",\n    height: \"750px\",\n    src: react_app\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"Install additional libraries\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"npm i react-router react-router-dom\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"react-router\"), \": seamless navigation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"react-router-dom\"), \": provides DOM navigation bindings for React Router\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"learn more about them \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://reacttraining.com/react-router/web/guides/quick-start\"\n  }), \"here\"))), mdx(\"hr\", null), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"./src/App.js\")), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import React, { Component } from 'react';\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <div>\\n        <p>Work in progress.</p>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"Import BrowserRouter\\\"\",\n    \"title\": \"\\\"Import\",\n    \"BrowserRouter\\\"\": true\n  }), \"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport {BrowserRouter} from 'react-router-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(\\n  <BrowserRouter>\\n    <App />\\n  </BrowserRouter>\\n, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"Import BrowserRouter\\\" 3,9:11\",\n    \"title\": \"\\\"Import\",\n    \"BrowserRouter\\\"\": true,\n    \"3,9:11\": true\n  }), \"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport {BrowserRouter} from 'react-router-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(\\n  <BrowserRouter>\\n    <App />\\n  </BrowserRouter>\\n, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"))), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\",\n    \"metastring\": \"file=./frontend_src/index.html\",\n    \"file\": \"./frontend_src/index.html\"\n  }), \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n  <head>\\n    <meta charset=\\\"utf-8\\\" />\\n    <link rel=\\\"icon\\\" href=\\\"%PUBLIC_URL%/favicon.ico\\\" />\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n    <meta name=\\\"theme-color\\\" content=\\\"#000000\\\" />\\n    <meta\\n      name=\\\"description\\\"\\n      content=\\\"Web site created using create-react-app\\\"\\n    />\\n    <link rel=\\\"apple-touch-icon\\\" href=\\\"%PUBLIC_URL%/logo192.png\\\" />\\n    <!--\\n      manifest.json provides metadata used when your web app is installed on a\\n      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/\\n    -->\\n    <link rel=\\\"manifest\\\" href=\\\"%PUBLIC_URL%/manifest.json\\\" />\\n    <!--\\n      Notice the use of %PUBLIC_URL% in the tags above.\\n      It will be replaced with the URL of the `public` folder during the build.\\n      Only files inside the `public` folder can be referenced from the HTML.\\n\\n      Unlike \\\"/favicon.ico\\\" or \\\"favicon.ico\\\", \\\"%PUBLIC_URL%/favicon.ico\\\" will\\n      work correctly both with client-side routing and a non-root public URL.\\n      Learn how to configure a non-root public URL by running `npm run build`.\\n    -->\\n    <title>React App</title>\\n  </head>\\n  <body>\\n    <noscript>You need to enable JavaScript to run this app.</noscript>\\n    <div id=\\\"root\\\"></div>\\n    <!--\\n      This HTML file is a template.\\n      If you open it directly in the browser, you will see an empty page.\\n\\n      You can add webfonts, meta tags, or analytics to this file.\\n      The build step will place the bundled scripts into the <body> tag.\\n\\n      To begin the development, run `npm start` or `yarn start`.\\n      To create a production bundle, use `npm run build` or `yarn build`.\\n    -->\\n  </body>\\n</html>\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"file=./frontend_src/index.js\",\n    \"file\": \"./frontend_src/index.js\"\n  }), \"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport {BrowserRouter} from 'react-router-dom';\\nimport './index.css';\\nimport App from './App';\\n\\nReactDOM.render(\\n  <BrowserRouter>\\n    <App />\\n  </BrowserRouter>\\n, document.getElementById('root'));\\n\"))), mdx(Step, {\n    subtitle: \"which HTML element React renders your app\",\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"31\": true,\n    \"className\": \"language-html\",\n    \"metastring\": \"file=./frontend_src/index.html 31\",\n    \"file\": \"./frontend_src/index.html\"\n  }), \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n  <head>\\n    <meta charset=\\\"utf-8\\\" />\\n    <link rel=\\\"icon\\\" href=\\\"%PUBLIC_URL%/favicon.ico\\\" />\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n    <meta name=\\\"theme-color\\\" content=\\\"#000000\\\" />\\n    <meta\\n      name=\\\"description\\\"\\n      content=\\\"Web site created using create-react-app\\\"\\n    />\\n    <link rel=\\\"apple-touch-icon\\\" href=\\\"%PUBLIC_URL%/logo192.png\\\" />\\n    <!--\\n      manifest.json provides metadata used when your web app is installed on a\\n      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/\\n    -->\\n    <link rel=\\\"manifest\\\" href=\\\"%PUBLIC_URL%/manifest.json\\\" />\\n    <!--\\n      Notice the use of %PUBLIC_URL% in the tags above.\\n      It will be replaced with the URL of the `public` folder during the build.\\n      Only files inside the `public` folder can be referenced from the HTML.\\n\\n      Unlike \\\"/favicon.ico\\\" or \\\"favicon.ico\\\", \\\"%PUBLIC_URL%/favicon.ico\\\" will\\n      work correctly both with client-side routing and a non-root public URL.\\n      Learn how to configure a non-root public URL by running `npm run build`.\\n    -->\\n    <title>React App</title>\\n  </head>\\n  <body>\\n    <noscript>You need to enable JavaScript to run this app.</noscript>\\n    <div id=\\\"root\\\"></div>\\n    <!--\\n      This HTML file is a template.\\n      If you open it directly in the browser, you will see an empty page.\\n\\n      You can add webfonts, meta tags, or analytics to this file.\\n      The build step will place the bundled scripts into the <body> tag.\\n\\n      To begin the development, run `npm start` or `yarn start`.\\n      To create a production bundle, use `npm run build` or `yarn build`.\\n    -->\\n  </body>\\n</html>\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"11\": true,\n    \"className\": \"language-js\",\n    \"metastring\": \"file=./frontend_src/index.js 11\",\n    \"file\": \"./frontend_src/index.js\"\n  }), \"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport {BrowserRouter} from 'react-router-dom';\\nimport './index.css';\\nimport App from './App';\\n\\nReactDOM.render(\\n  <BrowserRouter>\\n    <App />\\n  </BrowserRouter>\\n, document.getElementById('root'));\\n\")))), mdx(\"hr\", null), mdx(\"img\", {\n    width: \"1200px\",\n    height: \"1200px\",\n    src: layout\n  }), mdx(\"hr\", null), mdx(\"img\", {\n    width: \"1200px\",\n    height: \"1200px\",\n    src: layout_annotated\n  }), mdx(\"hr\", null), mdx(\"img\", {\n    width: \"1200px\",\n    height: \"1200px\",\n    src: form\n  }), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"file=./frontend_src/NavBar/NavBar.js subtitle=\\\"Functional as stateless\\\" title=\\\"Navigation Bar\\\"\",\n    \"file\": \"./frontend_src/NavBar/NavBar.js\",\n    \"subtitle\": \"\\\"Functional\",\n    \"as\": true,\n    \"stateless\\\"\": true,\n    \"title\": \"\\\"Navigation\",\n    \"Bar\\\"\": true\n  }), \"import React from 'react';\\nimport {Link, withRouter} from 'react-router-dom';\\n\\nfunction NavBar(props) {\\n\\n  return (\\n    <nav className=\\\"navbar navbar-dark bg-primary fixed-top\\\">\\n      <Link className=\\\"navbar-brand\\\" to=\\\"/\\\">\\n        Q&App\\n      </Link>\\n    </nav>\\n  );\\n}\\n\\nexport default withRouter(NavBar);\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import React, { Component } from 'react';\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <div>\\n        <p>Work in progress.</p>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"subtitle=\\\"Add navigation bar in\\\"\",\n    \"subtitle\": \"\\\"Add\",\n    \"navigation\": true,\n    \"bar\": true,\n    \"in\\\"\": true\n  }), \"import React, { Component } from 'react';\\nimport NavBar from './NavBar/NavBar';\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <div>\\n        <NavBar/>\\n        <p>Work in progress.</p>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\"))), mdx(\"hr\", null), mdx(\"img\", {\n    width: \"750px\",\n    height: \"750px\",\n    src: fail_layout\n  }), mdx(\"hr\", null), mdx(\"img\", {\n    width: \"750px\",\n    height: \"750px\",\n    src: devtools\n  }), mdx(\"hr\", null), mdx(\"img\", {\n    width: \"750px\",\n    height: \"750px\",\n    src: fixed_layout\n  }), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-css\",\n    \"metastring\": \"title=\\\"Add top margin to body\\\"\",\n    \"title\": \"\\\"Add\",\n    \"top\": true,\n    \"margin\": true,\n    \"to\": true,\n    \"body\\\"\": true\n  }), \"body {\\n  margin: 0;\\n  padding: 0;\\n  font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", \\\"Roboto\\\", \\\"Oxygen\\\",\\n    \\\"Ubuntu\\\", \\\"Cantarell\\\", \\\"Fira Sans\\\", \\\"Droid Sans\\\", \\\"Helvetica Neue\\\",\\n    sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\ncode {\\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \\\"Courier New\\\",\\n    monospace;\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-css\",\n    \"metastring\": \"title=\\\"Add top margin to body\\\"\",\n    \"title\": \"\\\"Add\",\n    \"top\": true,\n    \"margin\": true,\n    \"to\": true,\n    \"body\\\"\": true\n  }), \"body {\\n  margin: 0;\\n  padding: 0;\\n  font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", \\\"Roboto\\\", \\\"Oxygen\\\",\\n    \\\"Ubuntu\\\", \\\"Cantarell\\\", \\\"Fira Sans\\\", \\\"Droid Sans\\\", \\\"Helvetica Neue\\\",\\n    sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  margin-top: 100px;\\n}\\n\\ncode {\\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \\\"Courier New\\\",\\n    monospace;\\n}\\n\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"Install axios\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"npm i axios\\n\")), mdx(\"p\", null, \"Axios is a promise-based HTTP client\"), mdx(\"hr\", null), mdx(\"p\", null, \"src/Questions/Questions.js\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"345ee1a8-453c-5c8d-9fc8-a0d58594de85","slug":"","title":"ReactJS Crash Course"}}}